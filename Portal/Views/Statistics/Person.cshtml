@using Portal.Models.ViewModels;
@using System.Text;
@model PersonVM;
@{
    ViewData["Title"] = "أحصائيات بأسم معين";
}
<!-- Content Page -->
<div class="container-xxl flex-grow-1 container-p-y">
    <div class="card p-4">
        <div class="card-header">
            <h5 class="card-title mb-0">أحصائيات بأسم معين</h5>
            <div class="d-flex align-items-center mb-3">
                <i class="bx bx-checkbox-square"></i><span class="fw-semibold mx-2">اختر اسم لتظهر جميع تفاصيله:</span>
                <div class="col-md-3 m-3">
                    <select name="PersonId" id="NamesList" class="select2 form-select-lg">
                    </select>
                </div>
            </div>
        </div>
        @if (Model.FromQuery)
        {
            <div class="card-body">
                <small class="text-muted text-uppercase">معلومات شخصية</small>
                <ul class="list-unstyled mb-4 mt-3">
                    <li class="d-flex align-items-center mb-3">
                        <i class="bx bx-user"></i><span class="fw-semibold mx-2">الأسم:</span>
                        <span>@Model.FromQearyDetails.Name</span>
                    </li>
                    <li class="d-flex align-items-center mb-3">
                        <i class="bx bx-check"></i><span class="fw-semibold mx-2">الرقم المدني:</span>
                        <span>@Model.FromQearyDetails.CivilNumber</span>
                    </li>
                    <li class="d-flex align-items-center mb-3">
                        <i class="bx bx-phone-call"></i><span class="fw-semibold mx-2">رقم الهاتف:</span> <span>@Model.FromQearyDetails.PhoneNumber</span>
                    </li>
                    <li class="d-flex align-items-center mb-3">
                        <i class="bx bx-question-mark"></i><span class="fw-semibold mx-2">السبب:</span>
                        <span>
                            @{
                                var reason = @Model.FromQearyDetails.PersonReasonMapping.Select(re => re.Reasons);
                                if (reason.Any())
                                {
                                    string[] colors = { "primary", "secondary", "success", "danger", "warning", "info", "dark" };

                                    StringBuilder resultBuilder = new StringBuilder();

                                    Random random = new Random(); // Initialize random number generator

                                    foreach (var item in reason)
                                    {
                                        // Generate a random index to pick a color from the 'colors' array
                                        int randomIndex = random.Next(0, colors.Length);
                                        string randomColor = colors[randomIndex];

                                        // Append the badge to the resultBuilder
                                        resultBuilder.Append("<span class='badge p-1 bg-label-" + randomColor + "'>" + item.Name + "</span>");
                                    }

                                    <span>@Html.Raw(resultBuilder.ToString())</span>
                                }
                                else
                                {
                                    // Handle the case when 'reason' is empty
                                }
                            }
                        </span>
                    </li>
                </ul>
                <small class="text-muted text-uppercase">أحصائيات</small>
                <ul class="list-unstyled mb-4 mt-3">
                    <li class="d-flex align-items-center mb-3">
                        <i class="bx bx-trending-down"></i><span class="fw-semibold mx-2">المبلغ المصروف:</span>
                        <span>
                            @{
                                var SpendMoneyAmount = Model.FromQearyDetails.MosbSpendMoney.Select(x => x.Amount).Sum();
                                if (SpendMoneyAmount > 0)
{
                                    <span class="text-danger">تم صرف مبلغ @SpendMoneyAmount</span>
                                }
                                else if (SpendMoneyAmount == 0)
                                {
                                    <span class="text-warning">لم يتم صرف اي مبلغ</span>
                                }
                                

                            }
                        </span>
                    </li>
                    <li class="d-flex align-items-center mb-3">
                        <i class="bx bx-trending-up"></i><span class="fw-semibold mx-2">المبلغ المستقبله منه:</span>
                        <span>
                            @{
                                var ReceiveAmount = Model.FromQearyDetails.MosbReceivePayments.Select(x => x.Amount).Sum();
                                if (ReceiveAmount > 0)
                                {
                                    <span class="text-success">تم استقبال مبلغ @ReceiveAmount</span>
                                }
                                else if (ReceiveAmount == 0)
                                {
                                    <span class="text-warning">لم يتم استقبال اي مبلغ</span>
                                }
                            }
                        </span>
                    </li>
                    <li class="d-flex align-items-center mb-3">
                        <i class="bx bx-math"></i><span class="fw-semibold mx-2">المبلغ المتبقي:</span>
                        <span>
                            @{
                                double ReceivePaymentSum = @Model.FromQearyDetails.MosbReceivePayments.Select(x => x.Amount).Sum();
                                double SpendMoneySum = @Model.FromQearyDetails.MosbSpendMoney.Select(x => x.Amount).Sum();
                                double result = ReceivePaymentSum - SpendMoneySum;
                                if (result > 0)
                                {
                                    <span class="text-success">باقي له مبلغ @result</span>
                                }
                                else if (result < 0)
                                {
                                    <span class="text-danger">عليه مبلغ @result</span>
                                }
                                else if (result == 0)
                                {
                                    <span class="text-warning">لم يتم صرف اي مبلغ</span>
                                }
                            }
                        </span>
                    </li>
                </ul>
                <small class="text-muted text-uppercase">أخر النشاطات</small>
                <ul class="list-unstyled mt-3 mb-0">
                    <li class="d-flex align-items-center mb-3">
                        <i class="bx bxs-hourglass"></i><span class="fw-semibold mx-2">أخر عملية أستقبال مبلغ منه بتاريخ:</span>
                        <span>
                            @{
                                var Receivedate = @Model.FromQearyDetails.MosbReceivePayments;
                                if (Receivedate.Any())
                                {
                                    @Receivedate.Last().Date
                                    ;
                                }
                                else
                                {
                                    <span>لا يوجد</span>
                                }
                            }
                        </span>
                    </li>
                    <li class="d-flex align-items-center mb-3">
                        <i class="bx bx-error-alt"></i><span class="fw-semibold mx-2">أخر عملة صرف مبلغ له بتاريخ:</span>
                        <span>
                            @{
                                var Spenddate = @Model.FromQearyDetails.MosbSpendMoney;
                                if (Spenddate.Any())
                                {
                                    @Spenddate.Last().Date
                                    ;
                                }
                                else
                                {
                                    <span>لا يوجد</span>
                                }
                            }
                        </span>
                    </li>
                </ul>
                <small class="text-muted text-uppercase">أحصائيات الأسباب</small>
                <ul class="list-unstyled mt-3 mb-0">
                    <li class="d-flex align-items-center mb-3">
                        <i class="bx bx-error-alt"></i>
                        <span class="fw-semibold mx-2">مبالغ المستقبلة لأسباب معينة:</span>
                        <span>
                            @if (Model.FromQearyDetails.PersonReasonMapping.Any() && Model.FromQearyDetails.MosbReceivePayments.Any())
                            {
                                var personReasons = Model.FromQearyDetails.PersonReasonMapping.Select(re => re.Reasons).ToList();
                                var personReceivePayments = Model.FromQearyDetails.MosbReceivePayments;

                                var results = new List<(string name, double amount)>();

                                foreach (var reasons in personReasons)
                                {
                                    double amount = personReceivePayments
                                    .Where(pr => pr.ReceivePaymentsReasonsMapping.Any(r => r.ReasonsId == reasons.Id))
                                    .Sum(pr => pr.Amount);

                                    results.Add((reasons.Name, amount));
                                }

                                if (results.Any())
                                {
                                    foreach (var resultss in results)
                                    {
                                        <span>
                                            السبب:
                                        </span>
                                        <span class="text-info">
                                            @resultss.name
                                        </span>
                                        <span>
                                            بمبلغ:
                                        </span>
                                        <span class="text-success">
                                            @resultss.amount
                                        </span>
                                        <br />
                                    }
                                }
                                else
                                {
                                    <span class="text-danger">لا توجد معلومات عن المبالغ الدفوعة.</span>
                                }
                            }
                            else
                            {
                                <span class="text-danger">لا توجد معلومات عن المبالغ المستقبله بالأسباب.</span>
                            }
                        </span>
                    </li>
                </ul>


            </div>
        }
        else
        {
            // Please select a name to show details about him.




        }

    </div>
</div>



@section Stylesheet{
    <link rel="stylesheet" href="~/assets/vendor/libs/select2/select2.css">
    <link rel="stylesheet" href="~/assets/vendor/libs/perfect-scrollbar/perfect-scrollbar.css" />
    <link rel="stylesheet" href="~/assets/vendor/libs/typeahead-js/typeahead.css" />
        }

@section Scripts{
    <script src="~/assets/vendor/libs/select2/select2.js"></script>


    <script>


        $(document).ready(function () {

            $("#NamesList").select2({
                placeholder: 'اختر اسما لأظهار تفاصيله',
                allowClear: true,
            });

            // Fetch names using $.get shorthand
            $.get('@Url.Action("GetNames", "List")', function (data) {
                var options2 = $("#NamesList");
                $.each(data, function () {
                    options2.append(new Option(this.name, this.id));
                });

                var fromQuery = '@Model.FromQuery';
                var personId = @Model.PersonId;
                if (fromQuery == 'True') {
                    $("#NamesList").val(personId);
                } else {
                    $("#NamesList").val(null).trigger('change');
                }

            }).fail(function (jqXHR, textStatus, errorThrown) {
                console.error(textStatus, errorThrown);
            });

            // Handle selection change
            $("#NamesList").change(function () {
                var id = $(this).val();
                if (id) {
                    window.location.href = '@Url.Action("Person", "Statistics")?PersonId=' + id;
                }
            });




        });





    </script>



    }
