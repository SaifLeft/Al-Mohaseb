@model MonthlyReceivePaymentsVM;
@{
    ViewData["Title"] = "الإيداع الشهري";
    string anser = Model.IsHasRecodes ? "نعم" : "لا";
}
<!-- Content Page -->
<div class="container-xxl flex-grow-1 container-p-y">
    <div class="card mb-4">
        <div class="card-header d-flex align-items-center justify-content-between">
            <h5 class="mb-0">ايداع مبالغ بشكل شهري</h5>
        </div>
        <div class="card-body">
            <div class="row mb-3" id="flatpickrDiv">
                <label class="col-sm-2 col-form-label-lg">شهر الايداع</label>
                <div class="col-sm-3">
                    <input type="text" class="form-control flatpickr-input active" placeholder="YY-MM" id="flatpickr-date" readonly="readonly">
                </div>
            </div>
            @if (Model.IsSelected)
            {
                <div class="row mb-3" id="HasRecordDiv">
                    <label class="col-sm-2 col-form-label-lg">تم ايداع المالغ مسبقا؟</label>
                    <div class="col-sm-3">
                        @{
                            if (Model.IsHasRecodes)
                            {
                                <span class="badge bg-success">
                                    <label style="font-size:larger">
                                        @anser
                                    </label>
                                </span>
                            }
                            else
                            {
                                <span class="badge bg-danger">
                                    <label style="font-size:large">
                                        @anser
                                    </label>
                                </span>
                            }
                        }
                    </div>
                </div>
            }
        </div>
    </div>
    <div class="card border-secondary border-3" id="CardDetailsDiv" style="display:none;">
        <div class="card-header d-flex align-items-center justify-content-between">
            <h5 class="mb-0">جميع الأسماء للإيداع الشهري</h5>
            <div>
                @if (Model.IsHasRecodes)
                {
                    <button type="button" class="btn btn-outline-dark" id="PrintTableBtn">
                        <i class="bx bx-printer"></i>
                        طباعة النتيجة
                    </button>
                }
                <button type="button" class="btn btn-primary" onclick="CollectData()">مراجعة</button>
            </div>
        </div>

        <div class="card-body">
            <div class="col-12">
                <div class="table-responsive">
                    <table id="table" class="table table-flush-spacing">
                        <tbody>
                            @if (Model.SumitedMonthlyPayments.Any())
                            {
                                <tr>
                                    <td>
                                        <div class="form-check">
                                            <input class="form-check-input" type="checkbox" id="selectAll">
                                            <label class="form-check-label" for="selectAll">تحديد الجميع</label>
                                        </div>
                                    </td>
                                </tr>
                                foreach (var item in Model.SumitedMonthlyPayments)
                                {
                                    <tr>
                                        <td class="text-nowrap">
                                            @item.PersonName
                                            <br />
                                            <span>مبلغ الأشتراك: <label class="badge bg-dark">@item.SubscriptionAmount ريال</label></span>
                                        </td>
                                        <td class="na-person" data-PersonId="@item.PersonId" hidden>
                                            @item.PersonName
                                        </td>
                                        <td>
                                            <div class="d-flex gap-2">
                                                <label class="form-check-label col-form-label-sm col-md-1">دفع المبلغ؟</label>
                                                <div class="form-check col-md-1 form-check-success form-check-inline">
                                                    <input class="form-check-input IsPaid-checkbox" type="checkbox" data-input-id="@item.PersonId" @(item.IsPaid ? "checked" : "")>
                                                    <label class="form-check-label col-form-label-sm">نعم</label>
                                                </div>
                                            </div>
                                            <div class="d-flex gap-4">
                                                <label class="col-form-label-sm">المبلغ</label>
                                                <div class="col-md-2">
                                                    <input class="form-control form-control-sm Amount-inputs" value="@item.Amount" type="number" data-PersonId="@item.PersonId" @(item.IsPaid ? "" : "disabled")>
                                                </div>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            }
                            else
                            {
                                <tr>
                                    <td colspan="2" class="text-center text-bg-warning">لم يتم أدخال أي عضو منتسب للنظام</td>
                                </tr>
                            }

                        </tbody>
                    </table>
                </div>
                <!-- Permission table -->
            </div>
        </div>
    </div>
</div>
<!-- / Content Page -->

<div class="modal fade" id="ConfirmModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-simple modal-add-new-address">
        <div class="modal-content p-3 p-md-5">
            <div class="modal-body">
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                <div class="text-center mb-4">
                    <h3 class="address-title">التأكيد على حفظ الاسماء</h3>
                </div>
                <form id="ConfirmModalForm" class="row g-3" onsubmit="return false">
                    <div class="text-center mb-4">
                        <h5 class="address-title">
                            جميع الأسماء الأشخاص الذين تم تحديدهم للدفع مع المبلغ المحدد
                        </h5>
                    </div>
                    <div class="table-responsive">
                        <table class="table table-success " id="WillPaidTable">
                            <tbody>
                            </tbody>
                        </table>
                    </div>
                    <div class="table-responsive">
                        <table class="table table-danger table-flush-spacing" id="WillNotSelectedTable">
                            <tbody>
                            </tbody>
                        </table>
                    </div>
                    <div class="table-responsive">
                        <table class="table table-flush-spacing" id="BicStatestic">
                            <tbody>
                            </tbody>
                        </table>
                    </div>

                    <div class="col-12 text-center mt-4">
                        <button type="submit" id="ConfirmModalFormSubmit" class="btn btn-warning me-sm-3 me-1">حفظ مع التأكيد</button>
                        <button type="reset"
                                class="btn btn-label-secondary"
                                data-bs-dismiss="modal"
                                aria-label="Close">
                            إلغاء الأمر
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>


@section Stylesheet {
    <link rel="stylesheet" href="~/assets/vendor/libs/select2/select2.css">
    <link rel="stylesheet" href="~/assets/vendor/libs/perfect-scrollbar/perfect-scrollbar.css" />
    <link rel="stylesheet" href="~/assets/vendor/libs/typeahead-js/typeahead.css" />
    <link rel="stylesheet" href="~/assets/vendor/libs/flatpickr/flatpickr.css">
    <link rel="stylesheet" href="~/assets/vendor/libs/flatpickr/monthSelect/style.css">
    <link rel="stylesheet" href="~/assets/vendor/libs/perfect-scrollbar/perfect-scrollbar.css" />
    <link rel="stylesheet" href="~/assets/vendor/libs/typeahead-js/typeahead.css" />
    <link rel="stylesheet" href="~/assets/vendor/libs/bootstrap-datepicker/bootstrap-datepicker.css" />
    <link rel="stylesheet" href="~/assets/vendor/libs/bootstrap-daterangepicker/bootstrap-daterangepicker.css" />
    <link rel="stylesheet" href="~/assets/vendor/libs/jquery-timepicker/jquery-timepicker.css" />
    <link rel="stylesheet" href="~/assets/vendor/libs/pickr/pickr-themes.css" />
    <link rel="stylesheet" href="~/assets/vendor/libs/datatables-bs5/datatables.bootstrap5.css" />
    <link rel="stylesheet" href="~/assets/vendor/libs/datatables-responsive-bs5/responsive.bootstrap5.css" />
    <!-- Vendors CSS -->
    <link rel="stylesheet" href="~/assets/vendor/libs/perfect-scrollbar/perfect-scrollbar.css" />
    <link rel="stylesheet" href="~/assets/vendor/libs/typeahead-js/typeahead.css" />
    <link rel="stylesheet" href="~/assets/vendor/libs/datatables-bs5/datatables.bootstrap5.css" />
    <link rel="stylesheet" href="~/assets/vendor/libs/datatables-responsive-bs5/responsive.bootstrap5.css" />
    <link rel="stylesheet" href="~/assets/vendor/libs/datatables-buttons-bs5/buttons.bootstrap5.css" />
    <link rel="stylesheet" href="~/assets/vendor/libs/select2/select2.css" />
    <link rel="stylesheet" href="~/assets/vendor/libs/formvalidation/dist/css/formValidation.min.css" />
    <link rel="stylesheet" href="~/assets/vendor/libs/sweetalert2/sweetalert2.css">

}

@section Scripts {
    <script src="~/assets/vendor/libs/select2/select2.js"></script>
    <script src="~/assets/vendor/libs/flatpickr/flatpickr.js"></script>
    <script src="~/assets/vendor/libs/flatpickr/monthSelect/index.js"></script>
    <script src="~/assets/vendor/libs/flatpickr/monthSelect/monthSelect.js"></script>
    <script src="~/assets/vendor/libs/moment/moment.js"></script>
    <script src="~/assets/vendor/libs/flatpickr/flatpickr.js"></script>
    <script src="~/assets/vendor/libs/bootstrap-datepicker/bootstrap-datepicker.js"></script>
    <script src="~/assets/vendor/libs/bootstrap-daterangepicker/bootstrap-daterangepicker.js"></script>
    <script src="~/assets/vendor/libs/jquery-timepicker/jquery-timepicker.js"></script>
    <script src="~/assets/vendor/libs/pickr/pickr.js"></script>
    <script src="~/assets/vendor/libs/sweetalert2/sweetalert2.js"></script>
    <script src="~/assets/vendor/libs/datatables/jquery.dataTables.js"></script>
    <script src="~/assets/vendor/libs/datatables-bs5/datatables-bootstrap5.js"></script>
    <script src="~/assets/vendor/libs/datatables-responsive/datatables.responsive.js"></script>
    <script src="~/assets/vendor/libs/datatables-responsive-bs5/responsive.bootstrap5.js"></script>
    <script src="~/assets/vendor/libs/datatables/jquery.dataTables.js"></script>
    <script src="~/assets/vendor/libs/datatables-bs5/datatables-bootstrap5.js"></script>
    <script src="~/assets/vendor/libs/datatables-responsive/datatables.responsive.js"></script>
    <script src="~/assets/vendor/libs/datatables-responsive-bs5/responsive.bootstrap5.js"></script>
    <script src="~/assets/vendor/libs/datatables-buttons/datatables-buttons.js"></script>
    <script src="~/assets/vendor/libs/datatables-buttons-bs5/buttons.bootstrap5.js"></script>
    <script src="~/assets/vendor/libs/jszip/jszip.js"></script>


    <script>
        $(document).ready(function () {
            var IsDark = !document.documentElement.classList.contains("light-style");
            var IsSelected = '@Model.IsSelected';
            if (IsSelected != '' && IsSelected === 'True') {
                $('#CardDetailsDiv').show();
            }
            else {
                $('#CardDetailsDiv').hide();
            }
            // Get the current year and month in the format 'yyyy-MM'
            var YearMonth = '@Model.YearMonth'; // Example: '2021-01'
            var flatpickrDate = flatpickr('#flatpickr-date', {
                altInput: true,
                defaultDate: YearMonth === '' ? null : YearMonth,
                placeholder: 'الرجاء اختيار التاريخ',
                plugins: [
                    new monthSelectPlugin({
                        shorthand: true, // Use shorthand month names
                        dateFormat: "Y-m", // Display format 'year-month'
                        altFormat: "F Y", // Format for the alternative input display
                        theme: IsDark ? "dark" : "light" // Set the theme to light
                    })
                ],
                locale: {
                    // Define Arabic month names
                    months: {
                        shorthand: ['يناير', 'فبراير', 'مارس', 'أبريل', 'مايو', 'يونيو', 'يوليو', 'أغسطس', 'سبتمبر', 'أكتوبر', 'نوفمبر', 'ديسمبر'],
                        longhand: ['يناير', 'فبراير', 'مارس', 'أبريل', 'مايو', 'يونيو', 'يوليو', 'أغسطس', 'سبتمبر', 'أكتوبر', 'نوفمبر', 'ديسمبر']
                    }
                },
                onChange: function (selectedDates, dateStr, instance) {
                    var date = new Date(dateStr);
                    var month = date.getMonth() + 1;
                    var year = date.getFullYear();
                    var monthStr = month < 10 ? '0' + month : month;
                    var dateStr = year + '-' + monthStr;
                    var isValid = date !== '' && date !== undefined && date !== null;
                    if (!isValid) {
                        alert("الرجاء اختيار التاريخ");
                        return;
                    } else {
                        window.location.href = '@Url.Action("MonthlyReceivePayments", "Create")?YearMonth=' + dateStr;
                    }
                },

            });

            const selectAll = document.querySelector('#selectAll');
            const IsPaidCheckboxList = document.querySelectorAll('.IsPaid-checkbox');
            if (selectAll) {
                selectAll.addEventListener('change', (event) => {
                    const isChecked = event.target.checked;
                    IsPaidCheckboxList.forEach((checkbox) => {
                        checkbox.checked = isChecked;
                        handleCheckboxChange(checkbox);
                    });
                });
            }
            IsPaidCheckboxList.forEach((checkbox) => {
                checkbox.addEventListener('change', () => {
                    handleCheckboxChange(checkbox);
                });
            });

        });
        function handleCheckboxChange(checkbox) {
            const PersonId = checkbox.getAttribute('data-input-id');
            // get all Amount-inputs Elements where data-PersonId = PersonId
            const AmountPersonElement = document.querySelector(`.Amount-inputs[data-PersonId="${PersonId}"]`);
            AmountPersonElement.disabled = !checkbox.checked;
            //inputElement.value = checkbox.checked ? initialAmountPerInput : 0;
            // if is checked then show green tick, else show red cross for each checkbox
            const icon = checkbox.checked ? '<i class="fa fa-check"></i>' : '<i class="fa fa-times"></i>';

        }
        function CollectData() {
            var MonthlyPaidData = [];
            var IsPaidCheckboxList = document.querySelectorAll('.IsPaid-checkbox');
            IsPaidCheckboxList.forEach((checkbox) => {
                var PersonId = checkbox.getAttribute('data-input-id');
                var AmountPersonElement = document.querySelector(`.Amount-inputs[data-PersonId="${PersonId}"]`);
                var Amount = AmountPersonElement.value; //593.354500000004 to 593.3545
                Amount = parseFloat(Amount).toFixed(3); // 593.3545 to 593.35

                if (checkbox.checked) {
                    MonthlyPaidData.push(
                        {
                            PersonId: PersonId,
                            Amount: Amount,
                            IsPaid: checkbox.checked
                        }
                    );
                }
                else {
                    MonthlyPaidData.push(
                        {
                            PersonId: PersonId,
                            Amount: 0,
                            IsPaid: checkbox.checked
                        }
                    );

                }
            });
            // Show Model Confirm
            FillTruePaid(MonthlyPaidData);

            $('#ConfirmModal').modal('show');

            $('#ConfirmModalFormSubmit').click(function () {
                SendAjaxData(MonthlyPaidData);
            });
        }
        function SendAjaxData(MonthlyPaidData) {

            var data = {
                MonthlyPaidData: MonthlyPaidData,
                YearMonth: '@Model.YearMonth'
            }
            $.ajax({
                type: "POST",
                url: '@Url.Action("ModifyMonthlyReceiveRecordAjax", "Create")',
                data: data,
                success: function (response) {
                    if (response.status) {
                        alert(response.message);
                        var url = '@Url.Action("MonthlyReceivePayments", "Create")';
                        url += '?YearMonth=' + '@Model.YearMonth';
                        window.location.href = url;

                    }
                    else {
                        alert(response.message);
                    }
                }
            });

        }
        function FillTruePaid(MonthlyPaidData) {

            var WillPaidTable = $('#WillPaidTable');
            var WillNotSelectedTable = $('#WillNotSelectedTable');
            var WillPaidTableBody = WillPaidTable.find('tbody');
            var WillNotSelectedTableBody = WillNotSelectedTable.find('tbody');

            // BicStatestic
            var BicStatestic = $('#BicStatestic');
            var BicStatesticBody = BicStatestic.find('tbody');
            BicStatesticBody.empty();
            // عدد  الأشخاص الذين دفعوا
            var WillPaidCount = 0;
            // عدد الأشخاص الذين لم يدفعوا
            var WillNotSelectedCount = 0;
            // مجموع المبالغ التي تم دفعها
            let WillPaidAmount = 0;

            WillPaidTableBody.empty();
            WillNotSelectedTableBody.empty();

            var WillPaidTableBodyHtml = '';
            var WillNotSelectedTableBodyHtml = '';
            MonthlyPaidData.forEach((item) => {
                var Amount = parseFloat(item.Amount);
                if (item.IsPaid) {
                    WillPaidCount++;
                    WillPaidAmount += Amount;
                    var Name = $('.na-person[data-PersonId="' + item.PersonId + '"]').text();
                    WillPaidTableBodyHtml += '<tr><td>' + Name + '</td><td>' + Amount + ' ريال</td></tr>';
                }
                else {
                    var Name = $('.na-person[data-PersonId="' + item.PersonId + '"]').text();
                    WillNotSelectedTableBodyHtml += '<tr><td>' + Name + '</td><td>' + Amount + ' ريال</td></tr>';
                    WillNotSelectedCount++;
                }

            });
            WillPaidTableBody.append(WillPaidTableBodyHtml);
            WillNotSelectedTableBody.append(WillNotSelectedTableBodyHtml);

            WillPaidAmount = WillPaidAmount.toFixed(3);
            var WillPaidCountTaxt = 'عدد الأشخاص الذين دفعوا : ' + WillPaidCount + ' أشخاص';
            var WillNotSelectedCountTaxt = 'عدد الأشخاص الذين لم يدفعوا : ' + WillNotSelectedCount + ' أشخاص'
            var WillPaidAmountTaxt = 'مجموع المبالغ التي تم دفعها : ' + WillPaidAmount + ' ريال';
            var BicStatesticBodyHtml = '<tr class="text-success" ><td>' + WillPaidCountTaxt + '</td></tr><tr class="text-danger" ><td>' + WillNotSelectedCountTaxt + '</td></tr><tr class="text-info" ><td>' + WillPaidAmountTaxt + '</td></tr>';
            BicStatesticBody.append(BicStatesticBodyHtml);


        }
        $('#PrintTableBtn').on('click', function () {

            // TableHeder
            var TableHeder = JSON.parse('@Html.Raw(Json.Serialize(Model.TableHeder))');
            // TableBody
            var TableBody = JSON.parse('@Html.Raw(Json.Serialize(Model.TableBody))');

            var Title = 'جميع الايداعات الشهرية لتاريخ' + ' ' + '@Model.YearMonth';


            // Open a new window for printing
            var printWin = window.open('', '', 'width=1000,height=600');

            // Print the data on the page after a short delay
            printWin.onload = function () {
                setTimeout(function () {
                    printWin.document.write('<html st dir="rtl" style="font-family:Adobe Arabic;">');
                    printWin.document.write('<title>' + Title + '</title>');

                    printWin.document.write('<h1>' + Title + '</h1>');

                    printWin.document.write('<h3>عدد الأسماء في النظام : ' + TableBody.length + '</h3>');
                    var WillPaidCount = 0;
                    var WillNotSelectedCount = 0;
                    var WillPaidAmount = 0;
                    $.each(TableBody, function (i, row) {
                        var Amount = parseFloat(row[3]);
                        if (row[2] === 'نعم') {
                            WillPaidCount++;
                            WillPaidAmount += Amount;
                        }
                        else {
                            WillNotSelectedCount++;
                        }
                    });
                    WillPaidAmount = WillPaidAmount.toFixed(3);
                    printWin.document.write('<h3>عدد الأشخاص الذين دفعوا : ' + WillPaidCount + ' أشخاص</h3>');
                    printWin.document.write('<h3>عدد الأشخاص الذين لم يدفعوا : ' + WillNotSelectedCount + ' أشخاص</h3>');
                    printWin.document.write('<h3>مجموع المبالغ التي تم دفعها : ' + WillPaidAmount + ' ريال</h3>');

                    printWin.document.write('<table border="1" dir="rtl" class="table table-striped table-bordered" style="width:100%">');
                    printWin.document.write('<thead>');
                    printWin.document.write('<tr>');
                    $.each(TableHeder, function (i, header) {
                        printWin.document.write('<th>' + header + '</th>');
                    });
                    printWin.document.write('</tr>');
                    printWin.document.write('</thead>');
                    printWin.document.write('<tbody>');
                    $.each(TableBody, function (i, row) {
                        printWin.document.write('<tr>');
                        $.each(row, function (j, cell) {
                            printWin.document.write('<td>' + cell + '</td>');
                        });
                        printWin.document.write('</tr>');
                    });

                    printWin.document.write('</tbody>');
                    printWin.document.write('</table>');








                    printWin.document.close();

                    // Focus on the print window and initiate the print
                    printWin.focus();
                    printWin.print();
                    printWin.close();
                }, 1500); // Adjust the delay time as needed
            };
        });
    </script>


}

